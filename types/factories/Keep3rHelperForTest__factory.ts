/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  Keep3rHelperForTest,
  Keep3rHelperForTestInterface,
} from "../Keep3rHelperForTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3rV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LiquidityPairInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "BOOST_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KP3R",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KP3R_WETH_POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TARGETBOND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "basefee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "bonds",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountBonded",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "int56",
        name: "_tickDifference",
        type: "int56",
      },
      {
        internalType: "uint256",
        name: "_timeInterval",
        type: "uint256",
      },
    ],
    name: "getKP3RsAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "_kp3rAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getPoolTokens",
    outputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "int56",
        name: "_tickDifference",
        type: "int56",
      },
      {
        internalType: "uint256",
        name: "_timeInterval",
        type: "uint256",
      },
    ],
    name: "getQuoteAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasUsed",
        type: "uint256",
      },
    ],
    name: "getRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasUsed",
        type: "uint256",
      },
    ],
    name: "getRewardAmountFor",
    outputs: [
      {
        internalType: "uint256",
        name: "_kp3r",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bonds",
        type: "uint256",
      },
    ],
    name: "getRewardBoostFor",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewardBoost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "isKP3RToken0",
    outputs: [
      {
        internalType: "bool",
        name: "_isKP3RToken0",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3rV2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_secondsAgo",
        type: "uint32[]",
      },
    ],
    name: "observe",
    outputs: [
      {
        internalType: "int56",
        name: "_tickCumulative1",
        type: "int56",
      },
      {
        internalType: "int56",
        name: "_tickCumulative2",
        type: "int56",
      },
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eth",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class Keep3rHelperForTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _keep3rV2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Keep3rHelperForTest> {
    return super.deploy(
      _keep3rV2,
      overrides || {}
    ) as Promise<Keep3rHelperForTest>;
  }
  getDeployTransaction(
    _keep3rV2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_keep3rV2, overrides || {});
  }
  attach(address: string): Keep3rHelperForTest {
    return super.attach(address) as Keep3rHelperForTest;
  }
  connect(signer: Signer): Keep3rHelperForTest__factory {
    return super.connect(signer) as Keep3rHelperForTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Keep3rHelperForTestInterface {
    return new utils.Interface(_abi) as Keep3rHelperForTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Keep3rHelperForTest {
    return new Contract(address, _abi, signerOrProvider) as Keep3rHelperForTest;
  }
}
